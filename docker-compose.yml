version: "2"

services:

  sinknode:
    build: .
    command: ["4", "mosquitto-1:1883", "mosquitto-2:1883"]
    links:
      - mosquitto-1
      - mosquitto-2
    restart: always

  publisher-high:
    image: rranshous/mosquitto
    links:
      - mosquitto-1
    command: bash -c 'echo "publishing after sleep" && sleep 5 && mosquitto_pub -h mosquitto-1 -p 1883 -t level/7 -m "test"'
    restart: always

  publisher-low:
    image: rranshous/mosquitto
    links:
      - mosquitto-1
    command: bash -c 'echo "publishing after sleep" && sleep 10 && mosquitto_pub -h mosquitto-1 -p 1883 -t level/2 -m "test"'
    restart: always

  logger-1:
    image: rranshous/mosquitto
    links:
      - mosquitto-1
    command: mosquitto_sub -v -h mosquitto-1 -p 1883 -t '#' -q 2
    restart: always

  logger-2:
    image: rranshous/mosquitto
    links:
      - mosquitto-2
    command: mosquitto_sub -v -h mosquitto-2 -p 1883 -t '#' -q 2
    restart: always

  mosquitto-1:
    image: rranshous/mosquitto
    ports:
      - "9001:9001"
      - "1883:1883"

  mosquitto-2:
    image: rranshous/mosquitto
    ports:
      - "9002:9001"
      - "1884:1883"

#  voting-app:
#    build: ./voting-app/.
#    volumes:
#     - ./voting-app:/app
#    ports:
#      - "5000:80"
#    links:
#      - redis
#    networks:
#      - front-tier
#      - back-tier
#
#  result-app:
#    build: ./result-app/.
#    volumes:
#      - ./result-app:/app
#    ports:
#      - "5001:80"
#    links:
#      - db
#    networks:
#      - front-tier
#      - back-tier
#
#  worker:
#    build: ./worker
#    links:
#      - db
#      - redis
#    networks:
#      - back-tier
#
#  redis:
#    image: redis:alpine
#    ports: ["6379"]
#    networks:
#      - back-tier
#
#  db:
#    image: postgres:9.4
#    volumes:
#      - "db-data:/var/lib/postgresql/data"
#    networks:
#      - back-tier
#
#volumes:
#  db-data:
#
#networks:
#  front-tier:
#  back-tier:
